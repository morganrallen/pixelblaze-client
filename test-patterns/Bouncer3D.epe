{
  "name": "Bouncer3D",
  "id": "82YHCZ8ScdivFqhwe",
  "sources": {
    "main": "/*\n Bouncer 2D/3D\n \n Bounces (up to 20) balls objects around a 2D or 3D display. \n Use sliders to set \"ball\" count, size and speed.  \n \n Requires a 2D or 3D LED array and appropriate pixel mapper.\n \n Version  Author        Date        Comment\n 1.0.1    JEM(ZRanger1) 11/12/2020 \n*/ \n\n// Global Variables\nvar maxBalls = 20;\nexport var numBalls = 6;\nexport var ballSize = 0.06;\nexport var speed = 0.075;\nexport var ballSize3D = ballSize * 4 ;\n\n// array of ball vectors\nvar balls = array(maxBalls);\n\n// UI\nexport function sliderBalls(v) {\n  numBalls = floor(1 + (v * (maxBalls - 1)));\n}\n\nexport function sliderSize(v) {\n  ballSize = 0.2 * v;\n  ballSize3D = ballSize * 4;\n}\n\nexport function sliderSpeed(v) {\n  speed = 0.15 * v;\n  initBalls();\n}\n\n// allocate memory for ball vectors\nfunction createBalls() {\n  for (var i = 0; i < maxBalls; i++) {  \n    balls[i] = array(7);\n  }\n}\n\n// create ball vector with a random position, direction, speed, color\nfunction initBalls() {\n  for (var i = 0; i < numBalls; i++) {\n    var b = balls[i];  \n    \n    b[0] = random(1);     // x pos\n    b[1] = random(1);     // y pos\n    b[2] = random(1);     // z pos    \n  \n    b[3] = random(speed); // x vec\n    b[4] = random(speed); // y vec\n    b[5] = random(speed); // z vec   \n    \n    b[6] = random(1);     // hue\n  }\n}\n\n// move balls and bounce them off \"walls\"\nfunction bounce() {\n  for (var i = 0; i < numBalls; i++) {\n    var b = balls[i];\n    \n// move ball    \n    b[0] += b[3];\n    b[1] += b[4];\n    b[2] += b[5];\n  \n// bounce off walls by flipping vector element sign when we hit.\n// If we do hit a wall, we exit early, trading precision\n// in corners for speed.  We'll catch it in a frame or two anyway\n    if (b[0] < 0) { b[0] = 0; b[3] = -b[3]; continue; } \n    if (b[1] < 0) { b[1] = 0; b[4] = -b[4]; continue; }\n    if (b[2] < 0) { b[2] = 0; b[5] = -b[5]; continue; }\n  \n    if (b[0] > 1) { b[0] = 1; b[3] = -b[3]; continue; }\n    if (b[1] > 1) { b[1] = 1; b[4] = -b[4]; continue; }\n    if (b[2] > 1) { b[2] = 1; b[5] = -b[5]; continue; }\n  }\n}\n\ncreateBalls();\ninitBalls();\n\nexport function beforeRender(delta) {\n  bounce();\n}\n\n\nexport function render2D(index,x,y) {\n  var dx,dy;  \n  var s = 1;\n  var v = 0;\n\n  for (var i = 0; i < numBalls; i++) {\n    if ((dx = abs(balls[i][0] - x)) > ballSize) continue;\n    if ((dy = abs(balls[i][1] - y)) <= ballSize) { \n      v = (dx + dy) / ballSize;  v = v * v;\n      s = v * 4; \n      v = 1-v;\n      h = balls[i][6];\n      break;\n    }  \n  }\n     \n  hsv(h, s, v)\n}\n\nexport function render3D(index,x,y,z) {\n  var dx,dy,dz;  \n  var v = 0;\n  var s = 1;\n  \n  for (var i = 0; i < numBalls; i++) {\n    if ((dx = abs(balls[i][0] - x)) > ballSize3D) continue;\n    if ((dy = abs(balls[i][1] - y)) > ballSize3D) continue;\n    if ((dz = abs(balls[i][2] - z)) <= ballSize3D) {\n      v = (dx + dy + dz) / ballSize3D;  v = v * v;\n      s = v * 4; \n      v = 1-v;\n      h = balls[i][6];\n      break;\n    }\n  }\n     \n  hsv(h, s, v)\n}\n"
  },
  "preview": ""
}